import 'dart:io';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:ironsource_mediation/ironsource_mediation.dart';

/// [LevelPlayNativeAdView] is the widget that contains the native ad elements
///  and must be created in order view native ad
class LevelPlayNativeAdView extends StatefulWidget {
  /// The native ad object that should be shown in the container
  final LevelPlayNativeAd? nativeAd;

  /// The native ad template type(small, medium) that used when showing the
  /// template native ads(when using custom it is not required)
  final LevelPlayTemplateType templateType;

  /// The desired width of the native ad view.
  final double? width;

  /// The desired height of the native ad view.
  final double? height;

  /// The styling options to apply on the native ad, when using custom it
  /// needs to be implemented in order to take action.
  final LevelPlayNativeAdTemplateStyle? templateStyle;

  /// A Callback to notify that the ad view container is successfully created and load ad is available.
  final VoidCallback? onPlatformViewCreated;

  /// Define the view type name to be used as custom template.
  final String viewType;

  /// Constructs an instance of [LevelPlayNativeAdView].
  const LevelPlayNativeAdView({Key? key,
    required this.nativeAd,
    this.templateType = LevelPlayTemplateType.SMALL,
    this.width,
    this.height,
    this.templateStyle,
    this.onPlatformViewCreated,
    this.viewType = 'levelPlayNativeAdViewType'
  }) : super(key: key);

  @override
  State<LevelPlayNativeAdView> createState() => _LevelPlayNativeAdViewState();
}

class _LevelPlayNativeAdViewState extends State<LevelPlayNativeAdView> {
  /// Invoked when the platform view for the native ad is created.
  /// Initialize the method channel and load ad if needed.
  void _onPlatformViewCreated(int id) {
    final String methodChannelName = "${widget.viewType}_$id";
    // Create method channel with the unique id generated by the platform initialization
    widget.nativeAd?.setMethodChannel(MethodChannel(methodChannelName));
    // Notify on ad view creation
    widget.onPlatformViewCreated?.call();
  }

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      width: widget.width,
      height: widget.height,
      child: Platform.isAndroid ? AndroidView(
        viewType: widget.viewType,
        creationParams: <String, dynamic>{
          "placement": widget.nativeAd?.placementName ?? '',
          "templateType": widget.templateType.value,
          "templateStyle": widget.templateStyle?.toMap(),
          "viewType": widget.viewType
        },
        creationParamsCodec: const StandardMessageCodec(),
        onPlatformViewCreated: _onPlatformViewCreated,
        ) :
        Platform.isIOS ? UiKitView(
            viewType: widget.viewType,
            creationParams: <String, dynamic>{
              "placement": widget.nativeAd?.placementName ?? '',
              "templateType": widget.templateType.value,
              "templateStyle": widget.templateStyle?.toMap(),
              "viewType": widget.viewType
            },
            creationParamsCodec: const StandardMessageCodec(),
            onPlatformViewCreated: _onPlatformViewCreated) : Container(),
    );
  }
}